<?xml version="1.0" encoding="UTF-8"?>
<!--
  JBoss, Home of Professional Open Source
  Copyright 2011, Red Hat, Inc. and/or its affiliates, and individual
  contributors by the @authors tag. See the copyright.txt in the
  distribution for a full listing of individual contributors.
 
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" []>
<chapter id="resource-injection">
   <title>Resource Injection</title>

   <para>
      In this chapter we'll look at how to inject some of the common JMS resource types.
   </para>

   <section id="injection">
      <title>JMS Resource Injection</title>

      <para>The following JMS resources are now available for injection:</para>

      <itemizedlist>
         <listitem>
            javax.jms.Connection
         </listitem>
         <listitem>
            javax.jms.Session
         </listitem>
      </itemizedlist>

      <para>Destination-based resources:</para>
      <itemizedlist>
         <listitem>
            javax.jms.Topic
         </listitem>
         <listitem>
            javax.jms.Queue
         </listitem>
         <listitem>
            javax.jms.TopicPublisher
         </listitem>
         <listitem>
            javax.jms.QueueSender
         </listitem>
         <listitem>
            javax.jms.TopicSubscriber
         </listitem>
         <listitem>
            javax.jms.QueueReceiver
         </listitem>
      </itemizedlist>

      <section id="injection.destination-based">
         <title>Destination Based Injection</title>

         <para>
            The injection of resources that are themselves a <literal>javax.jms.Destination</literal> or require one needs
            a hint:  What destination do you want to work with?  This is provided by the 
            <literal>@JmsDestination</literal> annotatation.
         
            <programlisting role="Java">
@Inject @JmsDestination(jndiName="jms/MyTopic") Topic t;
@Inject @JmsDestination(jndiName="jms/MyQueue") Queue q;</programlisting>
         </para>
            
         <para>            
            You should create your own qualifier to provide type safe injection of predefined destinations:
            <programlisting role="Java">
@Qualifier
@JmsDestination(jndiName = "jms/MyTopic")
public @interface MyTopic {}</programlisting>
         </para>
         
         <para>
         You can then use it in place of the <literal>@JmsDestination</literal> qualifier anywhere it's required:

         <programlisting role="Java">
@Inject @MyTopic TopicPublisher myPub;
...
@Inject @MyTopic Topic myTopic;</programlisting>
         </para>
      </section>
      
      <section id="injection.configuration">
         <title>Resource Configuration</title>
         
         <para>
             You can use the <literal>@JmsSession</literal> annotation when injecting <literal>javax.jms.Session</literal> to specify transacted and acknowledgement mode:
      <programlisting role="Java">
@Inject @JmsSession(transacted=false, acknowledgementMode=Session.CLIENT_ACKNOWLEDGE) Session s;
</programlisting>
         </para>
         
         <para>
            TODO Add other configuration options as they are implemented.
         </para>
      </section>
   </section>
</chapter>
